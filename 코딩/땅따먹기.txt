class Solution {
    int solution(int[][] land) {
        int answer = 0;
        int length = land.length-1;
        for (int j = 1; j<=length; j++){
            land[j][0] += Math.max(Math.max(land[j-1][1], land[j-1][2]), land[j-1][3]);
            land[j][1] += Math.max(Math.max(land[j-1][0], land[j-1][2]), land[j-1][3]);
            land[j][2] += Math.max(Math.max(land[j-1][0], land[j-1][1]), land[j-1][3]);
            land[j][3] += Math.max(Math.max(land[j-1][0], land[j-1][1]), land[j-1][2]);
        }
        
        return Math.max(Math.max(Math.max(land[length][0], land[length][1]), land[length][2]), land[length][3]);
    }
}


밑에처럼 풀면 반례가 존재
[[4, 3, 2, 1], [2, 2, 2, 1], [6, 6, 6, 4], [8, 7, 6, 5]]
20


class Solution {
    int solution(int[][] land) {
        int answer = 0;
        int index;
        int max;
        int beforemax;
        int temp = 0;
        for (int i = 0; i<4; i++){
            index = i;
            beforemax = land[0][i];
            System.out.print("시작 : ");
            System.out.println(i);
            for (int j = 1; j<land.length; j++){ 
                max = 0;
                for (int k = 0; k<4; k++){
                    if (k == index)
                        continue;
                    if (land[j][k]>=max){
                        max = land[j][k];
                        temp = k;
                    } 
                }
                
                beforemax += max;
                index = temp;
                System.out.print("max : ");
                System.out.println(max);
                System.out.print("index : ");
                System.out.println(index);
            }
            
            if (answer < beforemax)
                answer = beforemax;
        }
        return answer;
    }
}
                  