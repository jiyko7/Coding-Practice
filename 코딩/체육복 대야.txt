class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int[] people = new int[n+2];

        for(int l : lost)
            people[l]--;
        for(int r : reserve)
            people[r]++;

        for(int p = 1; p <= n; p++){
            if (people[p] == -1){
                if (people[p-1] == 1){
                    people[p-1]--;
                    people[p]++;
                }else if (people[p+1] == 1){
                    people[p+1]--;
                    people[p]++;
                }else{
                    n--;
                }
            }
        }

        return n;
    }
}
// class Solution {
//     public int solution(int n, int[] lost, int[] reserve) {
//         int[] people = new int[n];
//         int answer = n;

//         for (int l : lost) 
//             people[l-1]--;
//         for (int r : reserve) 
//             people[r-1]++;

//         for (int i = 0; i < people.length; i++) {
//             if(people[i] == -1) {
//                 if(i-1>=0 && people[i-1] == 1) {
//                     people[i]++;
//                     people[i-1]--;
//                 }else if(i+1< people.length && people[i+1] == 1) {
//                     people[i]++;
//                     people[i+1]--;
//                 }else 
//                     answer--;
//             }
//         }
//         return answer;
//     }
// }

import java.util.*;
class Solution {
    public int solution(int n, int[] lost, int[] reserve) {
        int answer = n;
        answer -= lost.length;
        
        Arrays.sort(lost);
        Arrays.sort(reserve);
        for(int i = 0; i<reserve.length; i++){
          for (int j = 0; j<lost.length; j++){
              if(reserve[i]==-1 || lost[j]==-1)
                continue;
              if (reserve[i] == lost[j]){
                 reserve[i] = -1;
                 lost[j] = -1;
                 answer++;
              }
          }
        }
        
        for (int i = 0; i<reserve.length; i++){
          for (int j = 0; j<lost.length; j++){
            if(reserve[i]==-1 || lost[j]==-1)
                continue;
            if(reserve[i]-1 == lost[j]){
                reserve[i] = -1;
                lost[j] = -1;
                answer++;
                continue;
            }
            if(reserve[i]+1 == lost[j]){
                reserve[i] = -1;
                lost[j] = -1;
                answer++;
                continue;
            } 

          }
        }
        return answer;
    }
}